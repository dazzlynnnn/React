{"version":3,"sources":["components/Header.js","components/Contents.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Contents","useState","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","useEffect","fetchEvents","a","axios","get","res","makeData","data","items","arr","reduce","acc","cur","currentDate","Date","year","getFullYear","month","getMonth","date","getDate","confirmed","Confirmed","active","Active","death","Deaths","recovered","Recovered","findItem","find","push","labels","map","datasets","label","backgroundColor","fill","borderColor","options","title","display","text","fontsize","legend","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAceA,EAZA,WACX,OACI,yBAAQC,UAAU,SAAlB,UACI,0CACA,mCACI,kDACA,yD,0DCkFDC,EAvFE,WAAO,IAAD,EAEuBC,mBAAS,IAFhC,mBAEZC,EAFY,KAEGC,EAFH,OAG2BF,mBAAS,IAHpC,mBAGZG,EAHY,KAGKC,EAHL,KAkEnB,OA7DAC,qBAAU,WACN,IAAMC,EAAW,uCAAG,4BAAAC,EAAA,sEACEC,IAAMC,IAAI,sDADZ,OACVC,EADU,OAEhBC,EAASD,EAAIE,MAFG,2CAAH,qDAIXD,EAAW,SAACE,GACd,IAAMC,EAAMD,EAAME,QAAO,SAACC,EAAKC,GAC3B,IAAMC,EAAc,IAAIC,KAAKF,EAAIE,MAC3BC,EAAOF,EAAYG,cACnBC,EAAQJ,EAAYK,WACpBC,EAAON,EAAYO,UACnBC,EAAYT,EAAIU,UAChBC,EAASX,EAAIY,OACbC,EAAQb,EAAIc,OACZC,EAAYf,EAAIgB,UAEhBC,EAAWlB,EAAImB,MAAK,SAAA5B,GAAC,OAAGA,EAAEa,OAASA,GAAQb,EAAEe,QAAUA,KAc7D,OAbKY,GACDlB,EAAIoB,KAAK,CAAChB,OAAME,QAAOE,OAAME,YAAWE,SAAQE,QAAOE,cAEvDE,GAAYA,EAASV,KAAOA,IAC5BU,EAASN,OAASA,EAClBM,EAASJ,MAAQA,EACjBI,EAASV,KAAOA,EAChBU,EAASd,KAAOA,EAChBc,EAASZ,MAAQA,EACjBY,EAASF,UAAYA,EACrBE,EAASR,UAAYA,GAGlBV,IACR,IAEGqB,EAASvB,EAAIwB,KAAI,SAAA/B,GAAC,gBAAMA,EAAEa,KAAR,kBAAiBb,EAAEe,MAAM,EAAzB,aACxBpB,EAAiB,CACbmC,OAAQA,EACRE,SAAU,CACN,CACIC,MAAO,+CACPC,gBAAiB,SACjBC,MAAM,EACN9B,KAAME,EAAIwB,KAAI,SAAA/B,GAAC,OAAGA,EAAEmB,iBAKhCtB,EAAmB,CACfiC,OAAQA,EACRE,SAAU,CACN,CACIC,MAAO,+CACPG,YAAa,SACbD,MAAM,EACN9B,KAAME,EAAIwB,KAAI,SAAA/B,GAAC,OAAGA,EAAEqB,eAMpCtB,OAGA,oCACI,8EACA,sBAAKR,UAAU,WAAf,UACI,8BACI,cAAC,MAAD,CAAKc,KAAMX,EAAe2C,QACtB,CAACC,MAAM,CAAEC,SAAS,EAAMC,KAAM,+CAAaC,SAAU,IACrDC,OAAO,CAAEH,SAAS,EAAMI,SAAU,eAG1C,8BACI,cAAC,OAAD,CAAMtC,KAAMT,EAAiByC,QACzB,CAACC,MAAM,CAAEC,SAAS,EAAMC,KAAM,4DAAgBC,SAAU,IACxDC,OAAO,CAAEH,SAAS,EAAMI,SAAU,sBCpE3CC,MATf,WACE,OACE,sBAAKrD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGSsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ecf1616d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <h1>COVID-19</h1>\n            <select>\n                <option>국내</option>\n                <option>해외</option>\n            </select>\n        </header>\n    )\n}\n\nexport default Header\n","import { useState, useEffect } from 'react'\nimport { Bar, Doughnut, Line } from 'react-chartjs-2'\nimport axios from 'axios'\nconst Contents = () => {\n\n    const [confirmedData, setConfirmedData] = useState({})\n    const [quarantinedData, setQuarantinedData] = useState({})\n\n    useEffect(()=>{\n        const fetchEvents = async()=>{\n            const res = await axios.get(\"https://api.covid19api.com/total/dayone/country/kr\")\n            makeData(res.data)\n        }\n        const makeData = (items)=>{\n            const arr = items.reduce((acc, cur)=>{\n                const currentDate = new Date(cur.Date);\n                const year = currentDate.getFullYear();\n                const month = currentDate.getMonth();\n                const date = currentDate.getDate();\n                const confirmed = cur.Confirmed;\n                const active = cur.Active;\n                const death = cur.Deaths;\n                const recovered = cur.Recovered;\n\n                const findItem = acc.find(a=> a.year === year && a.month === month);\n                if (!findItem){\n                    acc.push({year, month, date, confirmed, active, death, recovered})\n                }\n                if (findItem && findItem.date < date){\n                    findItem.active = active;\n                    findItem.death = death;\n                    findItem.date = date;\n                    findItem.year = year;\n                    findItem.month = month;\n                    findItem.recovered = recovered;\n                    findItem.confirmed = confirmed;\n                }\n\n                return acc;\n            }, [])\n            \n            const labels = arr.map(a=> `${a.year}년 ${a.month+1}월`);\n            setConfirmedData({\n                labels: labels,\n                datasets: [\n                    {\n                        label: \"국내 누적 확진자\",\n                        backgroundColor: \"salmon\",\n                        fill: true,\n                        data: arr.map(a=> a.confirmed)\n                    },\n                ]\n            });\n\n            setQuarantinedData({\n                labels: labels,\n                datasets: [\n                    {\n                        label: \"월별 격리자 현황\",\n                        borderColor: \"salmon\",\n                        fill: false,\n                        data: arr.map(a=> a.active)\n                    },\n                ]\n            });\n        }\n\n        fetchEvents();\n    })\n    return (\n        <section>\n            <h2>국내 코로나 현황</h2>\n            <div className=\"contents\">\n                <div>\n                    <Bar data={confirmedData} options={\n                        {title:{ display: true, text: \"누적 확진자 추이\", fontsize: 16},\n                        legend:{ display: true, position: \"bottom\"}}\n                    } />\n                </div>\n                <div>\n                    <Line data={quarantinedData} options={\n                        {title:{ display: true, text: \"월별 격리자 현황 추이\", fontsize: 16},\n                        legend:{ display: true, position: \"bottom\"}}\n                    } />\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Contents\n","//import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Contents from './components/Contents';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Contents />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}